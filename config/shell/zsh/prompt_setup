# Prompt
#
# Based on:
# Purification
# by Matthieu Cneude
# https://github.com/Phantas0s/purification
#
# License: MIT
#
# Prompt key:
# %F => Color dict
# %f => Reset color
# %~ => Current path
# %* => Time
# %n => Username
# %m => Shortname host
# %(?..) => Prompt conditional - %(condition.true.false)

# Display git status
prompt_git_status() {
  local INDEX STATUS

  INDEX=$(command git status --porcelain -b 2> /dev/null)

  STATUS=""

  if $(echo "$INDEX" | command rg -E "^\?\? " &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_UNTRACKED$STATUS"
  fi

  if $(echo "$INDEX" | rg "^A  " &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_ADDED$STATUS"
  elif $(echo "$INDEX" | rg "^M  " &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_ADDED$STATUS"
  elif $(echo "$INDEX" | rg "^MM " &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_ADDED$STATUS"
  fi

  if $(echo "$INDEX" | rg "^ M " &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_MODIFIED$STATUS"
  elif $(echo "$INDEX" | rg "^AM " &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_MODIFIED$STATUS"
  elif $(echo "$INDEX" | rg "^MM " &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_MODIFIED$STATUS"
  elif $(echo "$INDEX" | rg "^ T " &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_MODIFIED$STATUS"
  fi

  if $(echo "$INDEX" | rg "^R  " &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_RENAMED$STATUS"
  fi

  if $(echo "$INDEX" | rg "^ D " &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_DELETED$STATUS"
  elif $(echo "$INDEX" | rg "^D  " &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_DELETED$STATUS"
  elif $(echo "$INDEX" | rg "^AD " &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_DELETED$STATUS"
  fi

  if $(command git rev-parse --verify refs/stash >/dev/null 2>&1); then
    STATUS="$ZSH_THEME_GIT_PROMPT_STASHED$STATUS"
  fi

  if $(echo "$INDEX" | rg "^UU " &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_UNMERGED$STATUS"
  fi

  if $(echo "$INDEX" | rg "^## [^ ]\+ .*ahead" &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_AHEAD$STATUS"
  fi

  if $(echo "$INDEX" | rg "^## [^ ]\+ .*behind" &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_BEHIND$STATUS"
  fi

  if $(echo "$INDEX" | rg "^## [^ ]\+ .*diverged" &> /dev/null); then
    STATUS="$ZSH_THEME_GIT_PROMPT_DIVERGED$STATUS"
  fi

  if [[ ! -z "$STATUS" ]]; then
    echo " [ $STATUS]"
  fi
}

prompt_git_branch() {
  autoload -Uz vcs_info
  precmd_vcs_info() { vcs_info }
  precmd_functions+=( precmd_vcs_info )
  setopt prompt_subst
  zstyle ":vcs_info:git:*" formats "%b"
}

prompt_git_info() {
  [ ! -z "$vcs_info_msg_0_" ] && echo "$ZSH_THEME_GIT_PROMPT_PREFIX%F{white}$vcs_info_msg_0_%f$ZSH_THEME_GIT_PROMPT_SUFFIX"
}

prompt_precmd() {
  # Print an empty line before each prompt
  print -P ""
}

prompt_setup() {
  autoload -Uz add-zsh-hook
  add-zsh-hook precmd prompt_precmd

  ZSH_THEME_GIT_PROMPT_PREFIX=" %F{yellow}%f:"
  ZSH_THEME_GIT_PROMPT_DIRTY=""
  ZSH_THEME_GIT_PROMPT_CLEAN=""

  ZSH_THEME_GIT_PROMPT_ADDED="%F{green}+%f "
  ZSH_THEME_GIT_PROMPT_MODIFIED="%F{blue}%f "
  ZSH_THEME_GIT_PROMPT_DELETED="%F{red}x%f "
  ZSH_THEME_GIT_PROMPT_RENAMED="%F{magenta}➜%f "
  ZSH_THEME_GIT_PROMPT_UNMERGED="%F{yellow}═%f "
  ZSH_THEME_GIT_PROMPT_UNTRACKED="%F{white}%f "
  ZSH_THEME_GIT_PROMPT_STASHED="%B%F{red}%f%b "
  ZSH_THEME_GIT_PROMPT_BEHIND="%B%F{red}%f%b "
  ZSH_THEME_GIT_PROMPT_AHEAD="%B%F{green}%f%b "

  prompt_git_branch
  PROMPT=$'%F{green}%n@%m%f%F{white}:%f%F{blue}%~%f$(prompt_git_info)$(prompt_git_status)\n%B\$ %F{%(?.green.red)}❯%f%b '
}

prompt_setup
